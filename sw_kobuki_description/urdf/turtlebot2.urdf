<?xml version="1.0" encoding="UTF-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from xacro from /home/simulations/public_sim_ws/src/all/  | -->
<!-- |    turtlebot/turtlebot_description/robots/kobuki_hexagons_asus_xtion_pro.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--
    - Base      : kobuki
    - Stacks    : hexagons
    - 3d Sensor : kinect
-->
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="turtlebot">
  <!-- General -->
  <!-- 
    These properties must be observed by any machine
    that wants to be defined as a turtlebot. Refer
    to the REP for more details.
    
    http://www.ros.org/reps/rep-0119.html
   -->
  <!--
   ======================================================================
   - REP 119 : Rgb camera link relative to the Base link 
   ====================================================================== 
     Base link is currently defined as the rotational centre on the bottom
     of the base mould. For both create and kobuki this is actually exactly
     the same 3d world point. 
     
     This may cause an issue with a base with much different floor clearance.
     Should we be using base_footprint for this specification instead?
 
     Note: REP needs to be updated with the information below 
     (currently in development and awaiting feedback)
   -->
  <!--\t<xacro:property name="cam_py" value="-0.0125" /> Y varies for different configurations. get sets in sensors_urdf -->
  <!-- Kobuki -->
  <!-- Xacro properties -->
  <!-- Xacro macros -->
  <!-- Pole macros -->
  <!-- 
    Stack macro - all the components relative transforms are made with respect 
    to the parent link (usually base_link). They could be made relative to each
    other, but there is no necessary reason to do so.
  -->
  <!-- Microsoft Kinect / ASUS Xtion PRO Live for simulation -->
  <!-- 
    These properties must be observed by any machine
    that wants to be defined as a turtlebot. Refer
    to the REP for more details.
    
    http://www.ros.org/reps/rep-0119.html
   -->
  <link name="base_footprint" />
  <!--
       Base link is set at the bottom of the base mould.
       This is done to be compatible with the way base link
       was configured for turtlebot 1. Refer to
       
       https://github.com/turtlebot/turtlebot/issues/40
       
       To put the base link at the more oft used wheel
       axis, set the z-distance from the base_footprint
       to 0.352.
      -->
  <joint name="base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0102" />
    <parent link="base_footprint" />
    <child link="base_link" />
  </joint>
  <link name="base_link">
    <visual>
      <geometry>
        <!-- new mesh -->
        <mesh filename="package://sw_kobuki_description/urdf/meshes/main_body.dae" />
      </geometry>
      <origin rpy="0 0 0" xyz="0.001 0 0.05199" />
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.10938" radius="0.178" />
      </geometry>
      <origin rpy="0 0 0" xyz="0.0 0 0.05949" />
    </collision>
    <inertial>
      <!-- COM experimentally determined -->
      <origin xyz="0.01 0 0" />
      <mass value="2.4" />
      <!-- 2.4/2.6 kg for small/big battery pack -->
      <!-- Kobuki's inertia tensor is approximated by a cylinder with homogeneous mass distribution
             More details: http://en.wikipedia.org/wiki/List_of_moment_of_inertia_tensors
             m = 2.4 kg; h = 0.09 m; r = 0.175 m
             ixx = 1/12 * m * (3 * r^2 + h^2)
             iyy = 1/12 * m * (3 * r^2 + h^2)
             izz = 1/2 * m * r^2 
          -->
      <inertia ixx="0.019995" ixy="0.0" ixz="0.0" iyy="0.019995" iyz="0.0" izz="0.03675" />
    </inertial>
  </link>
  <joint name="wheel_left_joint" type="continuous">
    <parent link="base_link" />
    <child link="wheel_left_link" />
    <origin rpy="-1.57079632679 0 0" xyz="0.00 0.115 0.0250" />
    <axis xyz="0 0 1" />
  </joint>
  <link name="wheel_left_link">
    <visual>
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/wheel.dae" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0" />
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.0206" radius="0.0350" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0" />
    </collision>
    <inertial>
      <mass value="0.01" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001" />
    </inertial>
  </link>
  <joint name="wheel_right_joint" type="continuous">
    <parent link="base_link" />
    <child link="wheel_right_link" />
    <origin rpy="-1.57079632679 0 0" xyz="0.00 -0.115 0.0250" />
    <axis xyz="0 0 1" />
  </joint>
  <link name="wheel_right_link">
    <visual>
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/wheel.dae" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0" />
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.0206" radius="0.0350" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0" />
    </collision>
    <inertial>
      <mass value="0.01" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001" />
    </inertial>
  </link>
  <joint name="caster_front_joint" type="fixed">
    <parent link="base_link" />
    <child link="caster_front_link" />
    <origin rpy="-1.57079632679 0 0" xyz="0.115 0.0 0.007" />
  </joint>
  <link name="caster_front_link">
    <collision>
      <geometry>
        <cylinder length="0.0176" radius="0.017" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0" />
    </collision>
    <inertial>
      <mass value="0.01" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001" />
    </inertial>
  </link>
  <joint name="caster_back_joint" type="fixed">
    <parent link="base_link" />
    <child link="caster_back_link" />
    <origin rpy="-1.57079632679 0 0" xyz="-0.135 0.0 0.009" />
  </joint>
  <link name="caster_back_link">
    <collision>
      <geometry>
        <cylinder length="0.0176" radius="0.017" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0" />
    </collision>
    <inertial>
      <mass value="0.01" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001" />
    </inertial>
  </link>
  <!-- Kobuki's sensors -->
  <joint name="gyro_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin rpy="0 0 0" xyz="0.056 0.062 0.0202" />
    <parent link="base_link" />
    <child link="gyro_link" />
  </joint>
  <!-- <link name="gyro_link">
    <inertial>
      <mass value="0.001" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001" />
    </inertial>
  </link> -->
  <joint name="cliff_sensor_left_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0.08734 0.13601 0.0214" />
    <parent link="base_link" />
    <child link="cliff_sensor_left_link" />
  </joint>
  <link name="cliff_sensor_left_link">
    <inertial>
      <mass value="0.0001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001" />
    </inertial>
  </link>
  <joint name="cliff_sensor_right_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0.085 -0.13601 0.0214" />
    <parent link="base_link" />
    <child link="cliff_sensor_right_link" />
  </joint>
  <link name="cliff_sensor_right_link">
    <inertial>
      <mass value="0.0001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001" />
    </inertial>
  </link>
  <joint name="cliff_sensor_front_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0.156 0.00 0.0214" />
    <parent link="base_link" />
    <child link="cliff_sensor_front_link" />
  </joint>
  <link name="cliff_sensor_front_link">
    <inertial>
      <mass value="0.0001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001" />
    </inertial>
  </link>
  <joint name="laser_sensor_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.435" />
    <parent link="base_link" />
    <child link="laser_sensor_link" />
  </joint>
  <link name="laser_sensor_link">
    <inertial>
      <mass value="1e-5" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <box size="0.1 0.1 0.1" />
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <!--
            <mesh filename="package://hokuyo/meshes/hokuyo.dae" />
            -->
        <mesh filename="package://sw_kobuki_description/models/hokuyo/meshes/hokuyo.dae" />
      </geometry>
    </visual>
  </link>
  <gazebo reference="wheel_left_link">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="wheel_right_link">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="caster_front_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="caster_back_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="base_link">
    <mu1>0.3</mu1>
    <mu2>0.3</mu2>
    <sensor name="bumpers" type="contact">
      <always_on>1</always_on>
      <update_rate>50.0</update_rate>
      <visualize>true</visualize>
      <contact>
        <collision>base_footprint_collision_base_link</collision>
      </contact>
    </sensor>
  </gazebo>
  <gazebo reference="cliff_sensor_left_link">
    <sensor name="cliff_sensor_left" type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
          <!--            Can't use vertical rays until this bug is resolved: -->
          <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
          <!-- \t          <vertical> -->
          <!-- \t            <samples>50</samples> -->
          <!-- \t            <resolution>1.0</resolution> -->
          <!-- \t            <min_angle>-0.0436</min_angle>  -2.5 degree -->
          <!-- \t            <max_angle>0.0436</max_angle> 2.5 degree -->
          <!-- \t          </vertical> -->
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>
  <gazebo reference="cliff_sensor_right_link">
    <sensor name="cliff_sensor_right" type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
          <!--            Can't use vertical rays until this bug is resolved: -->
          <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
          <!-- \t          <vertical> -->
          <!-- \t            <samples>50</samples> -->
          <!-- \t            <resolution>1.0</resolution> -->
          <!-- \t            <min_angle>-0.0436</min_angle>  -2.5 degree -->
          <!-- \t            <max_angle>0.0436</max_angle> 2.5 degree -->
          <!-- \t          </vertical> -->
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>
  <gazebo reference="cliff_sensor_front_link">
    <sensor name="cliff_sensor_front" type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
          <!--            Can't use vertical rays until this bug is resolved: -->
          <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
          <!-- \t          <vertical> -->
          <!-- \t            <samples>50</samples> -->
          <!-- \t            <resolution>1.0</resolution> -->
          <!-- \t            <min_angle>-0.0436</min_angle>  -2.5 degree -->
          <!-- \t            <max_angle>0.0436</max_angle> 2.5 degree -->
          <!-- \t          </vertical> -->
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>

  <!-- *********************** IMU SENSOR SETUP **************************  -->
  <link name="gyro_link">
    <gravity>true</gravity>
    <sensor name="bmb_imu" type="imu">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <imu>
        <orientation>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-3</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-3</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-3</stddev>
            </noise>
          </z>
        </orientation>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>>0.005</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>>0.005</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>>0.005</stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
      <plugin name="basic_mobile_bot_imu" filename="libgazebo_ros_imu_sensor.so">
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
        <frame_name>gyro_link</frame_name>
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=/mobile_base/sensors/imu_data_raw</remapping>
        </ros>
      </plugin>
    </sensor>
  </link>

  <gazebo>
    <plugin name="basic_mobile_bot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>wheel_right_joint</joint_name>
      <joint_name>wheel_left_joint</joint_name>
    </plugin>
  </gazebo>


  <!-- *********************** WHEEL ODOMETRY ***************************    -->
  <gazebo>
    <plugin name="basic_mobile_bot_diff_drive" filename="libgazebo_ros_diff_drive.so">
      <update_rate>30</update_rate>
      <!-- wheels -->
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>
      <!-- kinematics -->
      <wheel_separation>.230</wheel_separation>
      <wheel_diameter>0.070</wheel_diameter>
      <!-- limits -->
      <max_wheel_torque>5.0</max_wheel_torque>
      <max_wheel_acceleration>0.0</max_wheel_acceleration>
      <!-- Receive velocity commands on this ROS topic -->
      <command_topic>cmd_vel</command_topic>
      <!-- output -->
      <!-- When false, publish no wheel odometry data to a ROS topic -->
      <publish_odom>true</publish_odom>
      <!-- When true, publish coordinate transform from odom to base_footprint -->
      <!-- I usually use the robot_localization package to publish this transform -->
      <publish_odom_tf>true</publish_odom_tf>
      <!-- When true, publish coordinate transform from base_link to the wheels -->
      <!-- The robot_state_publisher package is often used to publish this transform -->
      <publish_wheel_tf>true</publish_wheel_tf>
      <!-- <publish_wheel_tf>false</publish_wheel_tf> -->

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
      <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
      <odometry_source>1</odometry_source>
      <!-- Change the ROS topic we will publish the odometry data to -->
      <ros>
        <remapping>odom:=wheel/odometry</remapping>
      </ros>
    </plugin>
  </gazebo>

  <gazebo reference="laser_sensor_link">
    <sensor name="laser_sensor" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_gpu_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <ros>
          <remapping>~/out:=/kobuki/laser/scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>laser_sensor_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <!--gazebo>
    <plugin name="kobuki_controller" filename="libgazebo_ros_kobuki.so">
      <publish_tf>1</publish_tf>
      <left_wheel_joint_name>wheel_left_joint</left_wheel_joint_name>
      <right_wheel_joint_name>wheel_right_joint</right_wheel_joint_name>
      <wheel_separation>.230</wheel_separation>
      <wheel_diameter>0.070</wheel_diameter>
      <torque>1.0</torque>
      <velocity_command_timeout>0.6</velocity_command_timeout>
      <cliff_sensor_left_name>cliff_sensor_left</cliff_sensor_left_name>
      <cliff_sensor_center_name>cliff_sensor_front</cliff_sensor_center_name>
      <cliff_sensor_right_name>cliff_sensor_right</cliff_sensor_right_name>
      <cliff_detection_threshold>0.04</cliff_detection_threshold>
      <bumper_name>bumpers</bumper_name>
      <imu_name>imu</imu_name>
    </plugin>
   </gazebo-->
  <joint name="pole_bottom_0_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.12 0.082    0.1028" />
    <parent link="base_link" />
    <child link="pole_bottom_0_link" />
  </joint>

  <link name="pole_bottom_0_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/pole_bottom.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.0492" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.008" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="0.000001686" ixy="0.0" ixz="0.0" iyy="0.000001686" iyz="0.0" izz="0.000000144" />
    </inertial>
  </link>
  <joint name="pole_bottom_1_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.055 0.12 0.1028" />
    <parent link="base_link" />
    <child link="pole_bottom_1_link" />
  </joint>
  <link name="pole_bottom_1_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/pole_bottom.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.0492" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.008" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="0.000001686" ixy="0.0" ixz="0.0" iyy="0.000001686" iyz="0.0" izz="0.000000144" />
    </inertial>
  </link>
  <joint name="pole_bottom_2_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.055 0.12 0.1028" />
    <parent link="base_link" />
    <child link="pole_bottom_2_link" />
  </joint>
  <link name="pole_bottom_2_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/pole_bottom.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.0492" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.008" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="0.000001686" ixy="0.0" ixz="0.0" iyy="0.000001686" iyz="0.0" izz="0.000000144" />
    </inertial>
  </link>
  <joint name="pole_bottom_3_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.12 -0.082 0.1028" />
    <parent link="base_link" />
    <child link="pole_bottom_3_link" />
  </joint>
  <link name="pole_bottom_3_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/pole_bottom.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.0492" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.008" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="0.000001686" ixy="0.0" ixz="0.0" iyy="0.000001686" iyz="0.0" izz="0.000000144" />
    </inertial>
  </link>
  <joint name="pole_bottom_4_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.055 -0.12 0.1028" />
    <parent link="base_link" />
    <child link="pole_bottom_4_link" />
  </joint>
  <link name="pole_bottom_4_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/pole_bottom.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.0492" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.008" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="0.000001686" ixy="0.0" ixz="0.0" iyy="0.000001686" iyz="0.0" izz="0.000000144" />
    </inertial>
  </link>
  <joint name="pole_bottom_5_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.055 -0.12 0.1028" />
    <parent link="base_link" />
    <child link="pole_bottom_5_link" />
  </joint>
  <link name="pole_bottom_5_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/pole_bottom.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.0492" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.008" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="0.000001686" ixy="0.0" ixz="0.0" iyy="0.000001686" iyz="0.0" izz="0.000000144" />
    </inertial>
  </link>
  <joint name="plate_bottom_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.02364 0.0 0.1306" />
    <parent link="base_link" />
    <child link="plate_bottom_link" />
  </joint>
  <link name="plate_bottom_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/plate_bottom.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="-0.02364 0 0" />
      <geometry>
        <cylinder length="0.006" radius="0.170" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.520" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.003328" ixy="0.0" ixz="0.0" iyy="0.003328" iyz="0.0" izz="0.006656" />
    </inertial>
  </link>
  <joint name="pole_middle_0_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0381 0.1505 0.164" />
    <parent link="base_link" />
    <child link="pole_middle_0_link" />
  </joint>
  <link name="pole_middle_0_link">
    <visual>
      <origin rpy="0 3.14159265359 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/pole_middle.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.0608" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.012" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.000003805" ixy="0.0" ixz="0.0" iyy="0.000003805" iyz="0.0" izz="0.000000216" />
    </inertial>
  </link>
  <joint name="pole_middle_1_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0381 -0.1505 0.164" />
    <parent link="base_link" />
    <child link="pole_middle_1_link" />
  </joint>
  <link name="pole_middle_1_link">
    <visual>
      <origin rpy="0 3.14159265359 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/pole_middle.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.0608" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.012" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.000003805" ixy="0.0" ixz="0.0" iyy="0.000003805" iyz="0.0" izz="0.000000216" />
    </inertial>
  </link>
  <joint name="pole_middle_2_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.0381 0.1505 0.164" />
    <parent link="base_link" />
    <child link="pole_middle_2_link" />
  </joint>
  <link name="pole_middle_2_link">
    <visual>
      <origin rpy="0 3.14159265359 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/pole_middle.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.0608" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.012" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.000003805" ixy="0.0" ixz="0.0" iyy="0.000003805" iyz="0.0" izz="0.000000216" />
    </inertial>
  </link>
  <joint name="pole_middle_3_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.0381 -0.1505 0.164" />
    <parent link="base_link" />
    <child link="pole_middle_3_link" />
  </joint>
  <link name="pole_middle_3_link">
    <visual>
      <origin rpy="0 3.14159265359 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/pole_middle.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.0608" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.012" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.000003805" ixy="0.0" ixz="0.0" iyy="0.000003805" iyz="0.0" izz="0.000000216" />
    </inertial>
  </link>
  <joint name="plate_middle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.01364 0.0 0.1874" />
    <parent link="base_link" />
    <child link="plate_middle_link" />
  </joint>
  <link name="plate_middle_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/plate_middle.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.01364 0.0 0.0" />
      <geometry>
        <cylinder length="0.006" radius="0.170" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.520" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.003328" ixy="0.0" ixz="0.0" iyy="0.003328" iyz="0.0" izz="0.006656" />
    </inertial>
  </link>
  <joint name="pole_top_0_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0381 0.1505 0.292" />
    <parent link="base_link" />
    <child link="pole_top_0_link" />
  </joint>
  <link name="pole_top_0_link">
    <visual>
      <origin rpy="0 0 0" xyz=" 0 0 0" />
      <geometry>
        <!--
            <mesh filename="package://turtlebot_description/meshes/stacks/hexagons/pole_top.dae" />
            -->
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/pole_top.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.2032" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.060" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.000206991" ixy="0.0" ixz="0.0" iyy="0.000206991" iyz="0.0" izz="0.000001080" />
    </inertial>
  </link>
  <joint name="pole_top_1_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0381 -0.1505 0.292" />
    <parent link="base_link" />
    <child link="pole_top_1_link" />
  </joint>
  <link name="pole_top_1_link">
    <visual>
      <origin rpy="0 0 0" xyz=" 0 0 0" />
      <geometry>
        <!--
            <mesh filename="package://turtlebot_description/meshes/stacks/hexagons/pole_top.dae" />
            -->
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/pole_top.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.2032" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.060" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.000206991" ixy="0.0" ixz="0.0" iyy="0.000206991" iyz="0.0" izz="0.000001080" />
    </inertial>
  </link>
  <joint name="pole_top_2_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.0381 0.1505 0.292" />
    <parent link="base_link" />
    <child link="pole_top_2_link" />
  </joint>
  <link name="pole_top_2_link">
    <visual>
      <origin rpy="0 0 0" xyz=" 0 0 0" />
      <geometry>
        <!--
            <mesh filename="package://turtlebot_description/meshes/stacks/hexagons/pole_top.dae" />
            -->
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/pole_top.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.2032" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.060" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.000206991" ixy="0.0" ixz="0.0" iyy="0.000206991" iyz="0.0" izz="0.000001080" />
    </inertial>
  </link>
  <joint name="pole_top_3_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.0381 -0.1505 0.292" />
    <parent link="base_link" />
    <child link="pole_top_3_link" />
  </joint>
  <link name="pole_top_3_link">
    <visual>
      <origin rpy="0 0 0" xyz=" 0 0 0" />
      <geometry>
        <!--
            <mesh filename="package://turtlebot_description/meshes/stacks/hexagons/pole_top.dae" />
            -->
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/pole_top.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.2032" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.060" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.000206991" ixy="0.0" ixz="0.0" iyy="0.000206991" iyz="0.0" izz="0.000001080" />
    </inertial>
  </link>
  <joint name="pole_kinect_0_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.1024 0.098 0.2372" />
    <parent link="base_link" />
    <child link="pole_kinect_0_link" />
  </joint>
  <link name="pole_kinect_0_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.01" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/sensors/sensor_pole.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.0936" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.020" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.000014782" ixy="0.0" ixz="0.0" iyy="0.000014782" iyz="0.0" izz="0.000000360" />
    </inertial>
  </link>
  <joint name="pole_kinect_1_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.1024 -0.098 0.2372" />
    <parent link="base_link" />
    <child link="pole_kinect_1_link" />
  </joint>
  <link name="pole_kinect_1_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.01" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/sensors/sensor_pole.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.0936" radius="0.006" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.020" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.000014782" ixy="0.0" ixz="0.0" iyy="0.000014782" iyz="0.0" izz="0.000000360" />
    </inertial>
  </link>
  <joint name="plate_top_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.01364 0.0  0.3966" />
    <parent link="base_link" />
    <child link="plate_top_link" />
  </joint>
  <link name="plate_top_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/stacks/hexagons/plate_top.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.01364 0 0" />
      <geometry>
        <cylinder length="0.006" radius="0.170" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.520" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.003328" ixy="0.0" ixz="0.0" iyy="0.003328" iyz="0.0" izz="0.006656" />
    </inertial>
  </link>
  <joint name="camera_rgb_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.087 0.0205 0.287" />
    <parent link="base_link" />
    <child link="camera_rgb_frame" />
  </joint>
  <link name="camera_rgb_frame" />
  <joint name="camera_rgb_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0    0" />
    <parent link="camera_rgb_frame" />
    <child link="camera_rgb_optical_frame" />
  </joint>
  <link name="camera_rgb_optical_frame" />
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.022 0" />
    <parent link="camera_rgb_frame" />
    <child link="camera_link" />
  </joint>
  <link name="camera_link">
    <visual>
      <origin rpy="0 0 0" xyz="-0.015 0.0035 0.004" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/sensors/xtion_pro_camera.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0" />
      <geometry>
        <box size="0.0730 0.2760 0.0720" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.170" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001152600" ixy="0.0" ixz="0.0" iyy="0.000148934" iyz="0.0" izz="0.001154654" />
    </inertial>
  </link>
  <joint name="camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.027 0" />
    <parent link="camera_rgb_frame" />
    <child link="camera_depth_frame" />
  </joint>
  <link name="camera_depth_frame" />
  <joint name="camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0" />
    <parent link="camera_depth_frame" />
    <child link="camera_depth_optical_frame" />
  </joint>
  <link name="camera_depth_optical_frame" />


  <gazebo reference="camera_link">
    <sensor name="camera" type="depth">
      <!-- Set always_on only sensor, not on plugin -->
      <always_on>1</always_on>
      <!-- Set update_rate only sensor, not on plugin -->
      <update_rate>20.0</update_rate>
      <camera name="camera_name">
        <horizontal_fov>1.0471975512</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
        <distortion>
          <k1>0.0</k1>
          <k2>0.0</k2>
          <k3>0.0</k3>
          <p1>0.0</p1>
          <p2>0.0</p2>
          <center>0.0 0.0</center>
        </distortion>
      </camera>

      <plugin name="plugin_name" filename="libgazebo_ros_camera.so">
        <!-- Change namespace, camera name and topics so:
             * Raw images are published to: /custom_ns/custom_camera/custom_image
             * Depth images are published to: /custom_ns/custom_camera/custom_image_depth
             * Raw image camera info is published to: /custom_ns/custom_camera/custom_info_raw
             * Depth image camera info is published to: /custom_ns/custom_camera/custom_info_depth
             * Point cloud is published to: /custom_ns/custom_camera/custom_points 
        -->
        <ros>
          <!-- <namespace>""</namespace> -->
          <argument>camera/image_raw:=rgb/image_raw</argument>
          <argument>camera/image_depth:=depth/image_raw</argument>
          <argument>camera/camera_info:=rgb/camera_info</argument>
          <argument>camera/camera_info_depth:=depth/camera_info</argument>
          <argument>camera/points:=depth/points</argument>
        </ros>
        <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
        <camera_name>camera</camera_name>
        <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
        <frame_name>camera_depth_optical_frame</frame_name>
        <hack_baseline>0.1</hack_baseline>
        <!-- No need to repeat distortion parameters or to set autoDistortion -->
        <min_depth>0.4</min_depth>
        <max_depth>300.0</max_depth>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Asus mount -->
  <joint name="mount_asus_xtion_pro_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.1024    0.0 0.272" />
    <parent link="base_link" />
    <child link="mount_asus_xtion_pro_link" />
  </joint>
  <link name="mount_asus_xtion_pro_link">
    <visual>
      <origin rpy="-1.57079632679 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://sw_kobuki_description/urdf/meshes/sensors/xtion_pro_stack.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0" />
      <geometry>
        <box size="0.0330 0.2760 0.0120" />
      </geometry>
    </collision>
    <inertial>
      <mass value="0.170" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001152600" ixy="0.0" ixz="0.0" iyy="0.000148934" iyz="0.0" izz="0.001154654" />
    </inertial>
  </link>
</robot>